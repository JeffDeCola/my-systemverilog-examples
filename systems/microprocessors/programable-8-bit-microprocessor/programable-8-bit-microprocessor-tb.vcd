$date
	Sat Oct 24 13:30:32 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module programable_8_bit_microprocessor_tb $end
$var wire 24 ! MW [23:0] $end
$var wire 8 " MICROADDRESS [7:0] $end
$var wire 8 # DATA_OUT [7:0] $end
$var reg 8 $ DATA_IN_A [7:0] $end
$var reg 8 % DATA_IN_B [7:0] $end
$var reg 1 & GO_BAR $end
$var reg 1 ' JAM $end
$var reg 4 ( OPCODE [3:0] $end
$var reg 1 ) RESET $end
$var reg 1 * SYSTEM_CLK $end
$scope module CS $end
$var wire 24 + microword [23:0] $end
$var wire 8 , microaddress [7:0] $end
$var wire 13 - control_bits [23:11] $end
$var reg 3 . ALU_DEST [23:21] $end
$var reg 5 / ALU_FUNC [19:15] $end
$var reg 1 0 A_SOURCE $end
$var reg 4 1 BOP [12:9] $end
$var reg 1 2 B_SOURCE $end
$var reg 1 3 CIN $end
$var reg 1 4 COUNT $end
$var reg 4 5 MICRO_AD_HIGH [7:4] $end
$var reg 4 6 MICRO_AD_LOW [3:0] $end
$upscope $end
$scope module uut $end
$var wire 8 7 DATA_IN_A [7:0] $end
$var wire 8 8 DATA_IN_B [7:0] $end
$var wire 1 9 EIL_BAR $end
$var wire 1 & GO_BAR $end
$var wire 1 ' JAM $end
$var wire 24 : MW [23:0] $end
$var wire 4 ; OPCODE [3:0] $end
$var wire 1 ) RESET $end
$var wire 1 * SYSTEM_CLK $end
$var wire 4 < STATUS_BITS [3:0] $end
$var wire 8 = MICROADDRESS [7:0] $end
$var wire 8 > DATA_OUT [7:0] $end
$var wire 11 ? CONTROL_BITS [23:13] $end
$scope module CONTROL_SECTION $end
$var wire 1 @ COND_OUT $end
$var wire 4 A COUNTER_IN_HIGH_SIG [7:4] $end
$var wire 1 9 EIL_BAR $end
$var wire 1 & GO_BAR $end
$var wire 1 B HIGH $end
$var wire 8 C HIGH8 [7:0] $end
$var wire 1 ' JAM $end
$var wire 1 D LOW $end
$var wire 24 E MW [23:0] $end
$var wire 1 F NOTHING $end
$var wire 4 G OPCODE [3:0] $end
$var wire 1 ) RESET $end
$var wire 1 * SYSTEM_CLK $end
$var wire 4 H STATUS_BITS [3:0] $end
$var wire 1 I MPC_LOAD_BAR $end
$var wire 4 J MICRO_AD_LOW [3:0] $end
$var wire 4 K MICRO_AD_HIGH [7:4] $end
$var wire 8 L MICROADDRESS [7:0] $end
$var wire 1 M COUNT $end
$var wire 11 N CONTROL_BITS [23:13] $end
$var wire 8 O BUFFER_IN [7:0] $end
$var wire 4 P BOP [12:9] $end
$scope module COND_SELECT $end
$var wire 1 Q A $end
$var wire 1 R B $end
$var wire 1 S C $end
$var wire 1 T D0 $end
$var wire 1 D D1 $end
$var wire 1 U D2 $end
$var wire 1 V D3 $end
$var wire 1 & D4 $end
$var wire 1 W D5 $end
$var wire 1 D D6 $end
$var wire 1 D D7 $end
$var wire 1 X EN $end
$var wire 1 D EN_BAR $end
$var wire 1 @ W $end
$var wire 1 F Y $end
$scope module U1 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S c $end
$var wire 1 T d0 $end
$var wire 1 D d1 $end
$var wire 1 U d2 $end
$var wire 1 V d3 $end
$var wire 1 & d4 $end
$var wire 1 W d5 $end
$var wire 1 D d6 $end
$var wire 1 D d7 $end
$var wire 1 X en $end
$var wire 1 @ w $end
$var wire 1 F y $end
$upscope $end
$upscope $end
$scope module COUNTER_8 $end
$var wire 1 Y CARRY $end
$var wire 1 M COUNT $end
$var wire 4 Z COUNTER_IN_HIGH [7:4] $end
$var wire 4 [ COUNTER_IN_LOW [3:0] $end
$var wire 1 \ HIGH $end
$var wire 1 ] NOTHING $end
$var wire 1 ) RESET $end
$var wire 1 * SYSTEM_CLK $end
$var wire 1 I MPC_LOAD_BAR $end
$var wire 8 ^ COUNTER_OUT [7:0] $end
$scope module COUNTER1 $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 a C $end
$var wire 1 * CLK $end
$var wire 1 ) CLR_BAR $end
$var wire 1 b D $end
$var wire 1 M ENP $end
$var wire 1 \ ENT $end
$var wire 1 c QA $end
$var wire 1 d QB $end
$var wire 1 e QC $end
$var wire 1 f QD $end
$var wire 1 Y RCO $end
$var wire 1 g SYSTEM_CLK $end
$var wire 1 I LD_BAR $end
$scope module U1 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a c $end
$var wire 1 g clk $end
$var wire 1 ) clr $end
$var wire 1 b d $end
$var wire 1 M enp $end
$var wire 1 \ ent $end
$var wire 1 c qa $end
$var wire 1 d qb $end
$var wire 1 e qc $end
$var wire 1 f qd $end
$var wire 1 Y rco $end
$var wire 1 I ld $end
$upscope $end
$upscope $end
$scope module COUNTER2 $end
$var wire 1 h A $end
$var wire 1 i B $end
$var wire 1 j C $end
$var wire 1 * CLK $end
$var wire 1 ) CLR_BAR $end
$var wire 1 k D $end
$var wire 1 M ENP $end
$var wire 1 Y ENT $end
$var wire 1 l QA $end
$var wire 1 m QB $end
$var wire 1 n QC $end
$var wire 1 o QD $end
$var wire 1 ] RCO $end
$var wire 1 p SYSTEM_CLK $end
$var wire 1 I LD_BAR $end
$scope module U1 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j c $end
$var wire 1 p clk $end
$var wire 1 ) clr $end
$var wire 1 k d $end
$var wire 1 M enp $end
$var wire 1 Y ent $end
$var wire 1 l qa $end
$var wire 1 m qb $end
$var wire 1 n qc $end
$var wire 1 o qd $end
$var wire 1 ] rco $end
$var wire 1 I ld $end
$upscope $end
$upscope $end
$upscope $end
$scope module MUX8 $end
$var wire 8 q A8 [7:0] $end
$var wire 8 r B8 [7:0] $end
$var wire 1 s EN $end
$var wire 1 D EN_BAR $end
$var wire 1 ' S $end
$var wire 8 t Y8 [7:0] $end
$scope module MUX0 $end
$var wire 4 u a [3:0] $end
$var wire 4 v b [3:0] $end
$var wire 1 s en $end
$var wire 1 ' s $end
$var reg 4 w y [3:0] $end
$upscope $end
$scope module MUX1 $end
$var wire 4 x a [3:0] $end
$var wire 4 y b [3:0] $end
$var wire 1 s en $end
$var wire 1 ' s $end
$var reg 4 z y [3:0] $end
$upscope $end
$upscope $end
$scope module OPCODEDEC0 $end
$var wire 1 9 EIL_BAR $end
$var wire 1 { LOW $end
$var wire 4 | MW_AD_HIGH [7:4] $end
$var wire 4 } MW_BOP [12:9] $end
$var wire 4 ~ OPCODE [3:0] $end
$var wire 4 !" TO_COUNTER [7:4] $end
$var wire 1 "" W1 $end
$scope module U1 $end
$var wire 4 #" A4 [3:0] $end
$var wire 4 $" B4 [3:0] $end
$var wire 1 %" EN $end
$var wire 1 { EN_BAR $end
$var wire 4 &" Y4 [3:0] $end
$var wire 1 "" S $end
$scope module MUX0 $end
$var wire 4 '" a [3:0] $end
$var wire 4 (" b [3:0] $end
$var wire 1 %" en $end
$var wire 1 "" s $end
$var reg 4 )" y [3:0] $end
$upscope $end
$upscope $end
$scope module U2 $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 ," c $end
$var wire 1 -" d $end
$var wire 1 "" y $end
$upscope $end
$upscope $end
$scope module XOR_2 $end
$var wire 1 ." a $end
$var wire 1 @ b $end
$var wire 1 I y $end
$upscope $end
$upscope $end
$scope module PROCESSOR_SECTION $end
$var wire 8 /" ALU_OUT [7:0] $end
$var wire 11 0" CONTROL_BITS [23:13] $end
$var wire 8 1" DATA_IN_A [7:0] $end
$var wire 8 2" DATA_IN_B [7:0] $end
$var wire 8 3" DATA_OUT [7:0] $end
$var wire 1 9 EIL_BAR $end
$var wire 1 4" LOW $end
$var wire 1 * SYSTEM_CLK $end
$var wire 4 5" STATUS_BITS [3:0] $end
$var wire 8 6" IN_ZP [7:0] $end
$var wire 8 7" DATA_OUT_TB [7:0] $end
$var wire 8 8" DATA_OUT_TA [7:0] $end
$var wire 8 9" DATA_OUT_B [7:0] $end
$var wire 8 :" DATA_OUT_A [7:0] $end
$var wire 1 ;" CIN $end
$var wire 1 <" B_SOURCE $end
$var wire 1 =" A_SOURCE $end
$var wire 8 >" ALU_IN_B [7:0] $end
$var wire 8 ?" ALU_IN_A [7:0] $end
$var wire 5 @" ALU_FUNC [19:15] $end
$var wire 3 A" ALU_DEST [23:21] $end
$scope module ALU1 $end
$var wire 5 B" ALU_FUNC [19:15] $end
$var wire 1 C" C4 $end
$var wire 1 D" C8 $end
$var wire 1 ;" CIN $end
$var wire 8 E" OUT8 [7:0] $end
$var wire 1 F" Z $end
$var wire 8 G" IN_B [7:0] $end
$var wire 8 H" IN_A [7:0] $end
$upscope $end
$scope module F_REGISTER $end
$var wire 8 I" DATA_IN [7:0] $end
$var wire 1 J" ENABLE_CLK $end
$var wire 1 K" LOW $end
$var wire 1 * SYSTEM_CLK $end
$var wire 1 L" W1 $end
$var wire 8 M" DATA_OUT [7:0] $end
$scope module DFFS $end
$var wire 8 N" D [7:0] $end
$var wire 1 O" EN $end
$var wire 1 K" EN_BAR $end
$var wire 8 P" Q [7:0] $end
$var wire 1 L" CLK $end
$scope module U1 $end
$var wire 1 Q" d0 $end
$var wire 1 R" d1 $end
$var wire 1 S" d2 $end
$var wire 1 T" d3 $end
$var wire 1 U" d4 $end
$var wire 1 V" d5 $end
$var wire 1 W" d6 $end
$var wire 1 X" d7 $end
$var wire 1 K" en $end
$var wire 1 Y" q0 $end
$var wire 1 Z" q1 $end
$var wire 1 [" q2 $end
$var wire 1 \" q3 $end
$var wire 1 ]" q4 $end
$var wire 1 ^" q5 $end
$var wire 1 _" q6 $end
$var wire 1 `" q7 $end
$var wire 1 L" clk $end
$upscope $end
$upscope $end
$scope module OR1 $end
$var wire 1 * a $end
$var wire 1 J" b $end
$var wire 1 L" y $end
$upscope $end
$upscope $end
$scope module MUX_A $end
$var wire 1 a" EN $end
$var wire 1 4" EN_BAR $end
$var wire 1 =" S $end
$var wire 8 b" Y8 [7:0] $end
$var wire 8 c" B8 [7:0] $end
$var wire 8 d" A8 [7:0] $end
$scope module MUX0 $end
$var wire 4 e" a [3:0] $end
$var wire 4 f" b [3:0] $end
$var wire 1 a" en $end
$var wire 1 =" s $end
$var reg 4 g" y [3:0] $end
$upscope $end
$scope module MUX1 $end
$var wire 4 h" a [3:0] $end
$var wire 4 i" b [3:0] $end
$var wire 1 a" en $end
$var wire 1 =" s $end
$var reg 4 j" y [3:0] $end
$upscope $end
$upscope $end
$scope module MUX_B $end
$var wire 1 k" EN $end
$var wire 1 4" EN_BAR $end
$var wire 1 <" S $end
$var wire 8 l" Y8 [7:0] $end
$var wire 8 m" B8 [7:0] $end
$var wire 8 n" A8 [7:0] $end
$scope module MUX0 $end
$var wire 4 o" a [3:0] $end
$var wire 4 p" b [3:0] $end
$var wire 1 k" en $end
$var wire 1 <" s $end
$var reg 4 q" y [3:0] $end
$upscope $end
$scope module MUX1 $end
$var wire 4 r" a [3:0] $end
$var wire 4 s" b [3:0] $end
$var wire 1 k" en $end
$var wire 1 <" s $end
$var reg 4 t" y [3:0] $end
$upscope $end
$upscope $end
$scope module REGISTERA $end
$var wire 8 u" DATA_IN [7:0] $end
$var wire 1 9 ENABLE_CLK $end
$var wire 1 v" LOW $end
$var wire 1 * SYSTEM_CLK $end
$var wire 1 w" W1 $end
$var wire 8 x" DATA_OUT [7:0] $end
$scope module DFFS $end
$var wire 8 y" D [7:0] $end
$var wire 1 z" EN $end
$var wire 1 v" EN_BAR $end
$var wire 8 {" Q [7:0] $end
$var wire 1 w" CLK $end
$scope module U1 $end
$var wire 1 |" d0 $end
$var wire 1 }" d1 $end
$var wire 1 ~" d2 $end
$var wire 1 !# d3 $end
$var wire 1 "# d4 $end
$var wire 1 ## d5 $end
$var wire 1 $# d6 $end
$var wire 1 %# d7 $end
$var wire 1 v" en $end
$var wire 1 &# q0 $end
$var wire 1 '# q1 $end
$var wire 1 (# q2 $end
$var wire 1 )# q3 $end
$var wire 1 *# q4 $end
$var wire 1 +# q5 $end
$var wire 1 ,# q6 $end
$var wire 1 -# q7 $end
$var wire 1 w" clk $end
$upscope $end
$upscope $end
$scope module OR1 $end
$var wire 1 * a $end
$var wire 1 9 b $end
$var wire 1 w" y $end
$upscope $end
$upscope $end
$scope module REGISTERB $end
$var wire 8 .# DATA_IN [7:0] $end
$var wire 1 9 ENABLE_CLK $end
$var wire 1 /# LOW $end
$var wire 1 * SYSTEM_CLK $end
$var wire 1 0# W1 $end
$var wire 8 1# DATA_OUT [7:0] $end
$scope module DFFS $end
$var wire 8 2# D [7:0] $end
$var wire 1 3# EN $end
$var wire 1 /# EN_BAR $end
$var wire 8 4# Q [7:0] $end
$var wire 1 0# CLK $end
$scope module U1 $end
$var wire 1 5# d0 $end
$var wire 1 6# d1 $end
$var wire 1 7# d2 $end
$var wire 1 8# d3 $end
$var wire 1 9# d4 $end
$var wire 1 :# d5 $end
$var wire 1 ;# d6 $end
$var wire 1 <# d7 $end
$var wire 1 /# en $end
$var wire 1 =# q0 $end
$var wire 1 ># q1 $end
$var wire 1 ?# q2 $end
$var wire 1 @# q3 $end
$var wire 1 A# q4 $end
$var wire 1 B# q5 $end
$var wire 1 C# q6 $end
$var wire 1 D# q7 $end
$var wire 1 0# clk $end
$upscope $end
$upscope $end
$scope module OR1 $end
$var wire 1 * a $end
$var wire 1 9 b $end
$var wire 1 0# y $end
$upscope $end
$upscope $end
$scope module TEMP_REGISTER_A $end
$var wire 8 E# DATA_IN [7:0] $end
$var wire 1 F# ENABLE_CLK $end
$var wire 1 G# LOW $end
$var wire 1 * SYSTEM_CLK $end
$var wire 1 H# W1 $end
$var wire 8 I# DATA_OUT [7:0] $end
$scope module DFFS $end
$var wire 8 J# D [7:0] $end
$var wire 1 K# EN $end
$var wire 1 G# EN_BAR $end
$var wire 8 L# Q [7:0] $end
$var wire 1 H# CLK $end
$scope module U1 $end
$var wire 1 M# d0 $end
$var wire 1 N# d1 $end
$var wire 1 O# d2 $end
$var wire 1 P# d3 $end
$var wire 1 Q# d4 $end
$var wire 1 R# d5 $end
$var wire 1 S# d6 $end
$var wire 1 T# d7 $end
$var wire 1 G# en $end
$var wire 1 U# q0 $end
$var wire 1 V# q1 $end
$var wire 1 W# q2 $end
$var wire 1 X# q3 $end
$var wire 1 Y# q4 $end
$var wire 1 Z# q5 $end
$var wire 1 [# q6 $end
$var wire 1 \# q7 $end
$var wire 1 H# clk $end
$upscope $end
$upscope $end
$scope module OR1 $end
$var wire 1 * a $end
$var wire 1 F# b $end
$var wire 1 H# y $end
$upscope $end
$upscope $end
$scope module TEMP_REGISTER_B $end
$var wire 8 ]# DATA_IN [7:0] $end
$var wire 1 ^# ENABLE_CLK $end
$var wire 1 _# LOW $end
$var wire 1 * SYSTEM_CLK $end
$var wire 1 `# W1 $end
$var wire 8 a# DATA_OUT [7:0] $end
$scope module DFFS $end
$var wire 8 b# D [7:0] $end
$var wire 1 c# EN $end
$var wire 1 _# EN_BAR $end
$var wire 8 d# Q [7:0] $end
$var wire 1 `# CLK $end
$scope module U1 $end
$var wire 1 e# d0 $end
$var wire 1 f# d1 $end
$var wire 1 g# d2 $end
$var wire 1 h# d3 $end
$var wire 1 i# d4 $end
$var wire 1 j# d5 $end
$var wire 1 k# d6 $end
$var wire 1 l# d7 $end
$var wire 1 _# en $end
$var wire 1 m# q0 $end
$var wire 1 n# q1 $end
$var wire 1 o# q2 $end
$var wire 1 p# q3 $end
$var wire 1 q# q4 $end
$var wire 1 r# q5 $end
$var wire 1 s# q6 $end
$var wire 1 t# q7 $end
$var wire 1 `# clk $end
$upscope $end
$upscope $end
$scope module OR1 $end
$var wire 1 * a $end
$var wire 1 ^# b $end
$var wire 1 `# y $end
$upscope $end
$upscope $end
$scope module ZP_BIT1 $end
$var wire 8 u# F8 [7:0] $end
$var wire 1 v# ZP_BAR $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1v#
b11111111 u#
1t#
1s#
1r#
1q#
1p#
1o#
1n#
1m#
1l#
1k#
1j#
1i#
0h#
0g#
0f#
0e#
b11111111 d#
1c#
b11110000 b#
b11111111 a#
1`#
0_#
1^#
b11110000 ]#
1\#
1[#
1Z#
1Y#
1X#
1W#
1V#
1U#
1T#
1S#
1R#
1Q#
0P#
0O#
0N#
0M#
b11111111 L#
1K#
b11110000 J#
b11111111 I#
1H#
0G#
1F#
b11110000 E#
1D#
1C#
1B#
1A#
1@#
1?#
1>#
1=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
b11111111 4#
13#
b0 2#
b11111111 1#
10#
0/#
b0 .#
1-#
1,#
1+#
1*#
1)#
1(#
1'#
1&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
b11111111 {"
1z"
b0 y"
b11111111 x"
1w"
0v"
b0 u"
b1111 t"
b1111 s"
b1111 r"
b1111 q"
b1111 p"
b1111 o"
b11111111 n"
b11111111 m"
b11111111 l"
1k"
b1111 j"
b1111 i"
b1111 h"
b1111 g"
b1111 f"
b1111 e"
b11111111 d"
b11111111 c"
b11111111 b"
1a"
1`"
1_"
1^"
1]"
1\"
1["
1Z"
1Y"
1X"
1W"
1V"
1U"
0T"
0S"
0R"
0Q"
b11111111 P"
1O"
b11110000 N"
b11111111 M"
1L"
0K"
1J"
b11110000 I"
b11111111 H"
b11111111 G"
1F"
b11110000 E"
1D"
1C"
b11111 B"
b111 A"
b11111 @"
b11111111 ?"
b11111111 >"
1="
1<"
1;"
b11111111 :"
b11111111 9"
b11111111 8"
b11111111 7"
b11111111 6"
b1111 5"
04"
b11111111 3"
b0 2"
b0 1"
b11111111111 0"
b11110000 /"
1."
1-"
1,"
1+"
1*"
b1111 )"
b1111 ("
b0 '"
bx11 &"
1%"
b1111 $"
b0 #"
0""
bx11 !"
b0 ~
b1111 }
b1111 |
0{
b1111 z
b1111 y
b1111 x
b1111 w
b1111 v
b1111 u
b11111111 t
1s
b11111111 r
b11111111 q
zp
1o
1n
1m
1l
xk
xj
xi
xh
zg
1f
1e
1d
1c
0b
1a
1`
1_
b11111111 ^
1]
1\
b111 [
bx11 Z
1Y
1X
1W
1V
1U
1T
1S
1R
1Q
b1111 P
b11111111 O
b11111111111 N
1M
b11111111 L
b1111 K
b111 J
0I
b1111 H
b0 G
1F
b111111111111111111110111 E
0D
b11111111 C
1B
bx11 A
1@
b11111111111 ?
b11111111 >
b11111111 =
b1111 <
b0 ;
b111111111111111111110111 :
19
b0 8
b0 7
b111 6
b1111 5
14
13
12
b1111 1
10
b11111 /
b111 .
b11111111111 -
b11111111 ,
b111111111111111111110111 +
0*
0)
b0 (
0'
0&
b0 %
b0 $
b11111111 #
b11111111 "
b111111111111111111110111 !
$end
#10
1*
#15
1)
#20
0*
#30
1*
#35
0)
#40
0*
#50
1*
#60
0*
#70
1*
#75
15#
16#
1~"
1&
b11 %
b11 8
b11 2"
b11 .#
b11 2#
b100 $
b100 7
b100 1"
b100 u"
b100 y"
b1 (
b1 ;
b1 G
b1 ~
b1 #"
b1 '"
#80
0*
#90
1*
#95
0&
#100
0*
#110
1*
#120
0*
#130
1*
#140
0*
#150
1*
#160
0*
#170
1*
#180
0*
#190
1*
#195
05#
1|"
1}"
1&
b10 %
b10 8
b10 2"
b10 .#
b10 2#
b111 $
b111 7
b111 1"
b111 u"
b111 y"
b10 (
b10 ;
b10 G
b10 ~
b10 #"
b10 '"
#200
0*
#210
1*
#215
0&
#220
0*
#230
1*
#240
0*
#250
1*
#260
0*
#270
1*
#280
0*
#290
1*
#300
0*
#310
1*
#320
0*
#330
1*
#335
