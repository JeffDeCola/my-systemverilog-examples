$date
	Tue Oct 27 13:43:39 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module jeff_74x161_tb $end
$var wire 1 ! RCO $end
$var wire 1 " QD $end
$var wire 1 # QC $end
$var wire 1 $ QB $end
$var wire 1 % QA $end
$var reg 1 & A $end
$var reg 1 ' B $end
$var reg 1 ( C $end
$var reg 1 ) CLK $end
$var reg 1 * CLR_BAR $end
$var reg 1 + D $end
$var reg 1 , ENP $end
$var reg 1 - ENT $end
$var reg 1 . LD_BAR $end
$scope module uut $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 ( c $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 + d $end
$var wire 1 , enp $end
$var wire 1 - ent $end
$var wire 1 / ent_and_enp $end
$var wire 1 0 feedback_qa $end
$var wire 1 1 feedback_qb $end
$var wire 1 2 feedback_qc $end
$var wire 1 3 feedback_qd $end
$var wire 1 . ld_bar $end
$var wire 1 4 ld_or_clr $end
$var wire 1 ! rco $end
$var wire 1 " qd $end
$var wire 1 # qc $end
$var wire 1 $ qb $end
$var wire 1 % qa $end
$scope module OUTPUT_QA $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 & data $end
$var wire 1 0 feedback $end
$var wire 1 5 j $end
$var wire 1 6 k $end
$var wire 1 4 ld_or_clr $end
$var wire 1 7 to_j $end
$var wire 1 8 to_j_and_k $end
$var wire 1 9 to_k $end
$var wire 1 % q $end
$var wire 1 : NOTHING $end
$scope module JK $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 5 j $end
$var wire 1 6 k $end
$var wire 1 : q_bar $end
$var reg 1 % q $end
$upscope $end
$upscope $end
$scope module OUTPUT_QB $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 ' data $end
$var wire 1 1 feedback $end
$var wire 1 ; j $end
$var wire 1 < k $end
$var wire 1 4 ld_or_clr $end
$var wire 1 = to_j $end
$var wire 1 > to_j_and_k $end
$var wire 1 ? to_k $end
$var wire 1 $ q $end
$var wire 1 @ NOTHING $end
$scope module JK $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 ; j $end
$var wire 1 < k $end
$var wire 1 @ q_bar $end
$var reg 1 $ q $end
$upscope $end
$upscope $end
$scope module OUTPUT_QC $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 ( data $end
$var wire 1 2 feedback $end
$var wire 1 A j $end
$var wire 1 B k $end
$var wire 1 4 ld_or_clr $end
$var wire 1 C to_j $end
$var wire 1 D to_j_and_k $end
$var wire 1 E to_k $end
$var wire 1 # q $end
$var wire 1 F NOTHING $end
$scope module JK $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 A j $end
$var wire 1 B k $end
$var wire 1 F q_bar $end
$var reg 1 # q $end
$upscope $end
$upscope $end
$scope module OUTPUT_QD $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 + data $end
$var wire 1 3 feedback $end
$var wire 1 G j $end
$var wire 1 H k $end
$var wire 1 4 ld_or_clr $end
$var wire 1 I to_j $end
$var wire 1 J to_j_and_k $end
$var wire 1 K to_k $end
$var wire 1 " q $end
$var wire 1 L NOTHING $end
$scope module JK $end
$var wire 1 ) clk $end
$var wire 1 * clr_bar $end
$var wire 1 G j $end
$var wire 1 H k $end
$var wire 1 L q_bar $end
$var reg 1 " q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xL
0K
0J
0I
0H
0G
xF
0E
0D
0C
0B
0A
x@
0?
0>
0=
0<
0;
x:
09
08
07
06
05
04
03
02
01
00
0/
1.
0-
0,
0+
1*
0)
0(
0'
0&
x%
x$
x#
x"
0!
$end
#10
1)
#15
1:
1@
1F
1L
0%
0$
0#
0"
18
1>
1D
1J
14
0*
#20
0)
#30
1)
#35
1A
1G
1B
1C
1H
1I
1E
1K
1(
1+
0.
1*
#40
0)
#50
0F
0L
1#
1"
1)
#55
0A
0B
0G
0H
08
0>
0D
0C
0E
0J
0I
0K
04
1.
#60
0)
#70
1)
#80
0)
#90
1)
#100
0)
#110
1)
#120
0)
#130
1)
#140
0)
#150
1)
#155
18
10
1/
1,
1-
#160
0)
#170
1)
#180
0)
#190
1)
#200
0)
#210
1)
#220
0)
#230
1)
#240
0)
#250
1)
#260
0)
#270
1)
#280
0)
#290
1)
#300
0)
#310
1)
#320
0)
#330
1)
#340
0)
#350
1)
#355
08
00
0/
0,
0-
#360
0)
#370
1)
#380
0)
#390
1)
#400
0)
#410
1)
#420
0)
#430
1)
#440
0)
#450
1)
#455
